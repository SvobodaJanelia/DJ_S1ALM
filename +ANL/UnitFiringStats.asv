%{
# Sorted unit
-> EPHYS.Unit
---
unit_spike_number                        : int       # total number of spikes emitted by the unit during the session
mean_fr                                 : double    # mean firing rate (Hz) of the unit for the entire trial duration
mean_fr_sample_delay                     : double    # mean firing rate of the unit during sample and delay periods
mean_fr_response                    : double    # mean firing rate of the unit during the response period
peak_fr_                    : double    # peak firing rate (Hz) of the unit for the entire trial duration
peak_fr_sample_delay        : double    # mean firing rate of the unit during sample and delay periods
peak_fr_response            : double    # mean firing rate of the unit during the response period
peak_fr_basic_trial_types               : double    # peak firing rate (Hz) of the unit for the entire trial duration
peak_fr_sample_delay_basic_trial_types  : double    # mean firing rate of the unit during sample and delay periods
peak_fr_response_basic_trial_types      : double    # mean firing rate of the unit during the response period
unit_isi                                : blob      # unit inter spike intervals (seconds)

%}


classdef UnitFiringStats < dj.Computed
    
    methods(Access=protected)
        function makeTuples(self, key)
            
            obj = EXP.getObj(key);
            counter=0;
            for iUnits = 1:size(obj.eventSeriesHash.value,2)
                unit_channel = mode(obj.eventSeriesHash.value{iUnits}.channel);

                if unit_channel<=32 && key.electrode_group ==1
                    Insert_Unit(self, key, iUnits, unit_channel);
                    counter=counter+1;
                elseif unit_channel>32 && key.electrode_group ==2
                    unit_channel = unit_channel-32;
                    Insert_Unit(self, key, iUnits, unit_channel);
                    counter=counter+1;
                else
                end
                
            end
            fprintf('Populated %d units recorded from animal %d  on %s', counter, key.subject_id, fetch1(EXP.Session & key,'session_date'))
            
        end
    end
end

